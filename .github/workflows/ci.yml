name: "CI Checks"

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:

jobs:
    # Ensure compilation with no warnings or errors
    build:
        name: Build Project and Tests
        runs-on: ubuntu-latest
        env:
            SCCACHE_GHA_ENABLED: "true"
            RUSTC_WRAPPER: "sccache"
        steps:
            - uses: actions/checkout@v5
            - name: Setup Rust
              uses: dtolnay/rust-toolchain@stable
            - name: Setup sccache
              uses: mozilla-actions/sccache-action@v0.0.9
            - name: Cache Dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-
            - name: Build Project
              run: cargo build --verbose
            - name: Build Tests
              run: cargo test --no-run --verbose
            - name: Show sccache stats
              run: sccache --show-stats

    # Run all tests
    test:
        needs: build
        name: Run Tests
        runs-on: ubuntu-latest
        env:
            SCCACHE_GHA_ENABLED: "true"
            RUSTC_WRAPPER: "sccache"
        steps:
            - uses: actions/checkout@v5
            - name: Setup Rust
              uses: dtolnay/rust-toolchain@stable
            - name: Setup sccache
              uses: mozilla-actions/sccache-action@v0.0.9
            - name: Restore Dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-
            - name: Run Tests
              run: cargo test --verbose

    # Check code formatting
    format:
        needs: build
        name: Check Formatting
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - name: Setup Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt
            - name: Check formatting
              run: cargo fmt --all -- --check

    # Run clippy linting
    clippy:
        needs: build
        name: Run Clippy Lints
        runs-on: ubuntu-latest
        env:
            SCCACHE_GHA_ENABLED: "true"
            RUSTC_WRAPPER: "sccache"
        steps:
            - uses: actions/checkout@v5
            - name: Setup Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: clippy
            - name: Setup sccache
              uses: mozilla-actions/sccache-action@v0.0.9
            - name: Restore Dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-
            - name: Run clippy
              run: cargo clippy --all-targets --all-features -- -D warnings

    # Check documentation builds
    docs:
        needs: build
        name: Build Documentation
        runs-on: ubuntu-latest
        env:
            SCCACHE_GHA_ENABLED: "true"
            RUSTC_WRAPPER: "sccache"
        steps:
            - uses: actions/checkout@v5
            - name: Setup Rust
              uses: dtolnay/rust-toolchain@stable
            - name: Setup sccache
              uses: mozilla-actions/sccache-action@v0.0.9
            - name: Restore Dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-
            - name: Build documentation
              run: cargo doc --no-deps --document-private-items
